#
# Copyright (C) 2016 Vanilla Brain, Team - AllDAO Rights Reserved
#
# This fileDownload is part of 'VanillaTopic'
#
# NOTICE:  AllDAO information contained herein is, and remains
# the property of Vanilla Brain Team and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Vanilla Brain Incorporated
# and its suppliers and may be covered by U.S. and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Vanilla Brain Team.
#

#-------------------------------------------
# vanilla web application properties
#-------------------------------------------

#script base path
#개발시점에서 프로젝트의 script 소스의 절대경로를 표시한다. 운영시점에서는 특별한 경우가 아니고서는 명시하지 않는다.
#이 변수가 명시되지 않으면 기본적으로 WEB-INF/scripts를 기본경로로 인식한다.
#script.base.path = ./src/main/scripts

#groovy script reload
script.reload = true

#서비스 호출시 기본 경로로 추가되는 패키지명
# eg) my.service : scripts/my/service 경로를 기본으로 서비스 객체를 로딩한다.
service.base.package = service

#------------------------------------------------------------
# DB 설정.
# datasource.list가 정의 되어있지않으면 기본 data source만 구성한다.
#------------------------------------------------------------
data_source.list = vanillax_batch
#db.type 이 JNDI일경우 JNDI lookup한다
vanillax_batch.db.type = JNDI
vanillax_batch.db.jndi = jdbc/vanillabatch

#**** default DataSource 구성정보 ****
#db.type 이 JNDI일경우 JNDI lookup한다
db.type = JNDI
db.jndi = jdbc/rpacda

#----------------------
#DB ConnectionManager 클래스
# AbstractConnectionManager 상속한 클래스가 반드시 정의되어야한다.
# Webapplication인 경우 ConnectionManagerBase 값을 기본으로 사용할 수 있다.
#----------------------
#connection.manager.class = vanillax.framework.batch.db.DbConnectionManager
connection.manager.class = vanillax.framework.webmvc.db.ConnectionManagerBase

#----------------
#DB monitoring 설정.
#----------------
#DB 모니터링 여부. 기본값은 false
monitor.db = true
#ResultSet 결과 로그출력여부. 기본값은 false. 운영서버에서는 사용하지 말것!
monitor.db.result_set_printable = true
#ResultSet 결과 출력시 최대 행. 기본값은 100
monitor.db.result_set_max_rows_printable = 20

#----------------------
#filter script.
# eg) my.community.MyScript1, my.community.YourScript2
#----------------------
script.filters = filter.LoginFilter, filter.ResultFormatterFilter

#--------------------------------------
# Scheduler가 작동하기전 시스템 초기화 Action
#--------------------------------------
#schedule.initAction = servlet.InitAction

#--------------------------------------------------------------------------
# 배치에서 사용하는 설정.
# vanilla-init.properties에 정의되어 있으나 customizing이 필요한 경우 재정의할 수 있다.
#--------------------------------------------------------------------------
#schedule.errorLogger = servlet.ScheduleErrorLogger

#--------------------------------------
# Error 발생시 Exception의 stackTrace를 메시지에 포함할지 여부.
# 운영서버에서는 보안상의 이유로 활성화 하면 안된다.
#--------------------------------------
response.stackTrace = true

#-----------------------------------------
# custom Config
#-----------------------------------------
file.upload.path = D:/temp/fileupload

#토큰유효기간 (분)
token.timeout = 3000



